import definitions::*;
module scrambler (
	input wire clk,
	input wire rst,
	bus input_bus,
	bus output_bus
);

packet_t scram;

/*
always_ff @(posedge clk) 
begin
	 if (rst)
	   scram <= '{8'd0, 8'd0, 8'd0, 8'd0};
	 else beginput_bus
	 	scram.field0 <= input_bus.data.field3;	//crc
	 	scram.field1 <= input_bus.data.field2;	//payload
	 	scram.field2 <= input_bus.data.field1; //dest
	 	scram.field3 <= input_bus.data.field0; //header
	 end
end
*/

always_ff @(posedge clk) 
begin
	 if (rst)
	   scram <= '{8'd0, 8'd0, 8'd0, 8'd0};
	 else begin
	 	if(input_bus.data.field3[7] == 1'b1) begin
	 		scram.field0 <= input_bus.data.field3 ^ 1;
	 	end else begin 
	 		scram.field0 <= input_bus.data.field3 ^ input_bus.data.field3[0];
	 	end

		if(input_bus.data.field2[7] == 1'b1) begin
	 		scram.field1 <= input_bus.data.field2 ^ 1;
	 	end else begin 
	 		scram.field1 <= input_bus.data.field2 ^ input_bus.data.field2[0];
	 	end
	 	scram.field2 <= input_bus.data.field1;

	 	if(input_bus.data.field0[7] == 1'b1) begin
	 		scram.field3 <= input_bus.data.field0 ^ 1;
	 	end else begin 
	 		scram.field3 <= input_bus.data.field0 ^ input_bus.data.field0[0];
	 	end
	 end
end      
assign output_bus.data = scram;

endmodule